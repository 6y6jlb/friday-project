{"version":3,"sources":["main/ui/components/authorization/Authorization.module.css","main/ui/components/registration/Registration.module.css","main/ui/components/error-pages/404-error/Error_404.module.css","main/ui/components/password-recovery/PasswordRecovery.module.css","main/ui/common/components/SuperInputText/SuperInputText.module.css","main/ui/common/components/SuperCheckbox/SuperCheckbox.module.css","main/ui/components/profile/Profile.module.css","main/ui/common/components/SuperButton/SuperButton.module.css","features/test-components/TestComponents.module.css","main/ui/components/header/Header.module.css","main/ui/components/profile/Profile.tsx","main/ui/components/new-password/NewPassword.tsx","main/ui/common/components/SuperInputText/SuperInputText.tsx","main/ui/common/components/SuperButton/SuperButton.tsx","main/dal/instatnce.ts","main/dal/authAPI.ts","main/bll/recovery-password-reducer.ts","main/ui/components/password-recovery/PasswordRecovery.tsx","main/bll/registration-reducer.ts","main/ui/components/registration/Registration.tsx","main/ui/components/error-pages/404-error/Error_404.tsx","main/bll/profile-reducer.ts","main/bll/authorization-reducer.ts","main/ui/components/authorization/Authorization.tsx","main/ui/components/authorization/AuthorizationContainer.tsx","main/ui/common/components/SuperCheckbox/SuperCheckbox.tsx","features/test-components/TestComponents.tsx","main/ui/components/routes/Routes.tsx","main/ui/components/header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","Profile","props","profile","useSelector","state","profileEntity","auth","isAuth","className","style","profileContainer","image","src","avatar","name","email","to","PATH","AUTHORIZATION","NewPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","inputFrame","e","currentTarget","value","key","SuperButton","red","children","finalClassName","floatingButtonRed","floatingButtonDefault","instance","axios","create","baseURL","withCredentials","authApi","data","post","password","rememberMe","model","initialState","answer","actionsPasswordRecovery","payload","recoveryPasswordReducer","action","PasswordRecovery","dispatch","useDispatch","useState","setEmail","recoveryPassword","forgotContainer","titleFrame","placeholder","onClick","a","success","response","message","recoveryPasswordTC","signUpFrame","REGISTERED","ERROR_FROM_REQUEST","registerUserAC","registered","registerUserTC","then","errorFromRequestAC","Registration","userName","setuserName","setPassword","passwordConfirm","setPasswordConfirm","setError","errorFromServer","registration","useEffect","styles","registrationWrapper","inputWrapper","buttonWrapper","Error_404","mainbox","err","far","err2","msg","href","actionsProfile","initialStateProfile","_id","publicCardPacksCount","created","updated","isAdmin","verified","profileReducer","initialProfileState","undefined","actionsAuthorization","authReducer","Authorization","React","memo","onBlurCallback","changeEmailInput","changePasswordInput","login","authContainer","inputsFrame","onBlur","disabled","forgotPasFrame","PASSWORD_RECOVERY","forgotPasButton","REGISTRATION","AuthorizationContainer","PROFILE","loginTC","trim","length","SuperCheckbox","onChangeChecked","checkbox","checkBoxFrame","checked","console","log","id","htmlFor","TestComponents","testFrame","NEW_PASSWORD","ERROR_404","TEST","Routes","exact","path","render","Header","headerFrame","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","errorFromRequest","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.169a47ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"Authorization_authContainer__vFy80\",\"inputsFrame\":\"Authorization_inputsFrame__2P9DZ\",\"forgotPasFrame\":\"Authorization_forgotPasFrame__BrWXq\",\"signUpFrame\":\"Authorization_signUpFrame__1vbLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationWrapper\":\"Registration_registrationWrapper__2Mhbi\",\"buttonWrapper\":\"Registration_buttonWrapper__1sx-0\",\"inputWrapper\":\"Registration_inputWrapper__s8cfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Error_404_mainbox__3SNMS\",\"err\":\"Error_404_err__1XV1b\",\"far\":\"Error_404_far__QVFru\",\"err2\":\"Error_404_err2__3ILFH\",\"msg\":\"Error_404_msg__2l7Uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotContainer\":\"PasswordRecovery_forgotContainer__AhLoX\",\"inputFrame\":\"PasswordRecovery_inputFrame__2Niiv\",\"forgotPasFrame\":\"PasswordRecovery_forgotPasFrame__3lPpf\",\"signUpFrame\":\"PasswordRecovery_signUpFrame__11tka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__TKMZF\",\"errorInput\":\"SuperInputText_errorInput__QFNeK\",\"error\":\"SuperInputText_error__2O1aP\",\"inputFrame\":\"SuperInputText_inputFrame__17wrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBoxFrame\":\"SuperCheckbox_checkBoxFrame__1aOE2\",\"checkbox\":\"SuperCheckbox_checkbox__2p9_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__1P_WC\",\"image\":\"Profile_image__EpHOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingButtonDefault\":\"SuperButton_floatingButtonDefault__W4xXD\",\"floatingButtonRed\":\"SuperButton_floatingButtonRed__2fS2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testFrame\":\"TestComponents_testFrame__2Dc8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerFrame\":\"Header_headerFrame__1AmnK\"};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {ProfileResponseType} from \"../../../bll/profile-reducer\";\r\nimport style from './Profile.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nexport const Profile: React.FC = (props) => {\r\n    const profile = useSelector<AppStateType, ProfileResponseType> ( state => state.profile.profileEntity )\r\n    const isAuth = useSelector<AppStateType, boolean> ( state => state.auth.isAuth )\r\n\r\n    if (!isAuth) return <Redirect to={ PATH.AUTHORIZATION }/>\r\n    return (\r\n        <div className={style.profileContainer}>\r\n                <img className={style.image} src={profile.avatar||\"http://placehold.it/300x300\"} />\r\n                <h1>{profile.name || profile.email || 'челавечка'}</h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport const NewPassword:React.FC= (props)=>{\r\n    return <h1>NewPassword</h1>\r\n}\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === \"Enter\" && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${spanClassName ? spanClassName : s.error}`;\r\n  const finalInputClassName = error\r\n    ? `${s.errorInput} ${className}`\r\n    : `${s.superInput} ${className}`;\r\n  //const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n    <div className={s.inputFrame}>\r\n      <input\r\n        type={\"text\"}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      <div>{error && <span className={finalSpanClassName}>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  children,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${\r\n    red ? s.floatingButtonRed : s.floatingButtonDefault\r\n  } ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\n\r\n\r\n//export const baseURL = 'http://localhost:7542/2.0/'; //local back\r\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0'; //remote back\r\n\r\nexport const instance = axios.create ( {\r\n    baseURL,\r\n    withCredentials: true\r\n} );","import {instance} from \"./instatnce\";\r\nimport {ProfileResponseType} from \"../bll/profile-reducer\";\r\nimport {RegisterDataType} from \"../bll/registration-reducer\";\r\n\r\nexport const authApi = {\r\n    pingGet: () => {\r\n        return instance.get('ping/')\r\n    },\r\n    pingPost: () => {\r\n        return instance.post('ping/', {frontTime: Date.now()})\r\n    },\r\n    me: () => {\r\n        return instance.post('auth/me', {})\r\n    },\r\n    register: (data: RegisterDataType) => {\r\n        debugger\r\n        return instance.post('auth/register', data)\r\n    },\r\n    login: (email: string, password: string, rememberMe: boolean) => {\r\n        const model = {\r\n            email, password, rememberMe\r\n        }\r\n        return instance.post<ProfileResponseType>('auth/login/', model)\r\n    },\r\n    logOut: () => {\r\n        return instance.delete('auth/me/', {})\r\n    },\r\n    forgot: (email: string) => {\r\n        return instance.post('auth/forgot', {email} )\r\n    }\r\n}","import { AppThunk, InferActionsType } from \"./store\";\r\nimport { authApi } from \"../dal/authAPI\";\r\nimport { actionsAuthorization } from \"./authorization-reducer\";\r\n\r\nconst initialState = {\r\nanswer:''\r\n}\r\n\r\n//actions\r\nexport const actionsPasswordRecovery = {\r\n\tsetAnswer : ( answer : string ) => {\r\n\t\treturn {\r\n\t\t\ttype : 'friday/passwordRecovery/setAnswer',\r\n\t\t\tpayload : { answer }\r\n\t\t} as const\r\n\t},\r\n}\r\n//reducer\r\nconst recoveryPasswordReducer = ( state = initialState, action : RecoveryPasswordActionsTypes ) : InitialStateProfileType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"friday/passwordRecovery/setAnswer\":\r\n\t\t\treturn {...state,...action.payload}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default recoveryPasswordReducer;\r\n\r\n//thunk\r\nexport const recoveryPasswordTC = ( email : string ) : AppThunk => async dispatch => {\r\n\tdispatch ( actionsPasswordRecovery.setAnswer ( '') )\r\n\ttry {\r\n\t\tconst response = await authApi.forgot ( email )\r\n\t\tif (response.data.success) {\r\n\t\t\tdispatch ( actionsPasswordRecovery.setAnswer ( 'проверь почту, будь молодцом') )\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconst error = e.response\r\n\t\t\t? e.response.data.error\r\n\t\t\t: (e.message + ', more details in the console');\r\n\t\tdispatch ( actionsPasswordRecovery.setAnswer ( 'попробуй еще раз') )\r\n\r\n\t}\r\n}\r\n\r\n\r\n//types\r\nexport type RecoveryPasswordActionsTypes = InferActionsType<typeof actionsPasswordRecovery>;\r\nexport type InitialStateProfileType = typeof initialState;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport style from \"./PasswordRecovery.module.css\";\r\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\r\nimport { recoveryPasswordTC } from \"../../../bll/recovery-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\tconst dispatch = useDispatch ();\r\n\tconst [email, setEmail] = useState<string> ( '' );\r\n\tconst answer = useSelector<AppStateType,string>(state=>state.recoveryPassword.answer)\r\n\tconst error = useSelector<AppStateType,string|undefined>(state=>state.auth.error)\r\n\tconst changeInput = ( e : any ) => {\r\n\t\tsetEmail ( e.currentTarget.value )\r\n\t}\r\n\treturn (\r\n\t\t<div className={ style.forgotContainer }>\r\n\t\t\t<div className={ style.titleFrame }><h1>it-incubator</h1>\r\n\t\t\t\t<h2>Forgot your password?</h2></div>\r\n\t\t\t<div className={ style.inputFrame }>\r\n\t\t\t\t<SuperInputText value={ email } onChange={ changeInput } placeholder={'e-mail' }/>\r\n\t\t\t\t{answer&&<p>{answer}</p>}\r\n\t\t\t\t{/*{error&&<p>{error}</p>}*/}\r\n\t\t\t\t<p>Enter your email address and we will send you further instructions</p>\r\n\t\t\t\t<SuperButton onClick={ () => dispatch ( recoveryPasswordTC ( email ) ) }>send help</SuperButton>\r\n\t\t\t</div>\r\n\t\t\t<div className={ style.signUpFrame }>\r\n\t\t\t\t<span>Did you remember your password?</span>\r\n\t\t\t\t<SuperButton><NavLink to={ PATH.AUTHORIZATION }>try login in</NavLink></SuperButton>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n/* <div className={ style.titleFrame }><h1>it-incubator</h1>\r\n                <h2>sign in</h2></div>\r\n            <div className={ style.inputsFrame }>\r\n                <SuperInputText onBlur={ () => onBlurCallback ( email ) } error={ error } value={ email }\r\n                                onChange={ changeEmailInput } placeholder={ 'login' }/>\r\n                <SuperInputText onBlur={ () => onBlurCallback ( password ) } error={ error } value={ password }\r\n                                onChange={ changePasswordInput } placeholder={ 'password' }/>\r\n                <SuperButton disabled={ !!error } red={ !!error } onClick={ login }>login</SuperButton>\r\n            </div>\r\n            <div className={ style.forgotPasFrame }>\r\n                <NavLink to={ PATH.PASSWORD_RECOVERY } className={ style.forgotPasButton }>forgot password?</NavLink>\r\n            </div>\r\n\r\n            <div className={ style.signUpFrame }>\r\n                <span>Don’t have an account?</span>\r\n                <SuperButton><NavLink to={ PATH.REGISTRATION }>sign up</NavLink></SuperButton>\r\n            </div>\r\n*/\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {InferActionsType} from \"./store\";\r\nimport {authApi} from \"../dal/authAPI\";\r\n\r\nconst REGISTERED = \"REGISTERED\";\r\nconst ERROR_FROM_REQUEST = \"ERROR_FROM_REQUEST\";\r\n\r\n//actions\r\nexport const actionsProfile = {\r\n    registered: false,\r\n    error: false\r\n};\r\n//reducer\r\nexport const registrationReducer = (\r\n    state = {},\r\n    action: RegistrationActionsTypes\r\n): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case REGISTERED: {\r\n            return {...state, registered: action.registered};\r\n        }\r\n        case ERROR_FROM_REQUEST: {\r\n            return {...state, error: action.errorFromRequest};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//actions\r\nexport const registerUserAC = (registered: boolean) => ({\r\n    type: REGISTERED,\r\n    registered,\r\n});\r\nexport const errorFromRequestAC = (error: string) => ({\r\n    type: ERROR_FROM_REQUEST,\r\n    error: error,\r\n});\r\n\r\n//thunks\r\nexport const registerUserTC = (data: RegisterDataType) => (dispatch: Dispatch) => {\r\n    authApi.register(data).then(() => {\r\n        try {\r\n            dispatch(registerUserAC(true));\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(errorFromRequestAC(error))\r\n        }\r\n\r\n    });\r\n};\r\n\r\n//types\r\n// export type RegistrationActionsTypes = InferActionsType<typeof actionsProfile>;\r\nexport type RegisterDataType = {\r\n    email: string;\r\n    password: string;\r\n};\r\nexport type RegistrationActionsTypes = any;\r\nexport type InitialStateProfileType = any;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {RootStateOrAny, useDispatch, useSelector} from \"react-redux\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {registerUserAC, registerUserTC} from \"../../../bll/registration-reducer\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\r\nimport styles from \"./Registration.module.css\";\r\n\r\nexport const Registration: React.FC = (props) => {\r\n    const [userName, setuserName] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n    const errorFromServer = useSelector<AppStateType, string>(state => state.registration.error)\r\n\r\n\r\n    const registered = useSelector<AppStateType, boolean>(\r\n        (state) => state.registration.registered\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeUsername = (e: string) => {\r\n        setuserName(e);\r\n    };\r\n    const onChangePassword = (e: string) => {\r\n        setPassword(e);\r\n    };\r\n    const onChangePasswordConfirm = (e: string) => {\r\n        setPasswordConfirm(e);\r\n    };\r\n    const onClickSubmitData = () => {\r\n        if (password !== passwordConfirm) {\r\n            setError(\"Passwords should be same\");\r\n        } else if (!password || !passwordConfirm) {\r\n            setError(\"Passwords should not be empty\");\r\n        } else {\r\n            dispatch(registerUserTC({email: userName, password}));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(registerUserAC(false));\r\n        };\r\n    }, []);\r\n    if (registered) {\r\n        return <Redirect to={\"/authorization\"}/>;\r\n    }\r\n    return (\r\n        <div className={styles.registrationWrapper}>\r\n            <div className={styles.inputWrapper}>\r\n                Username:\r\n                <SuperInputText value={userName} onChangeText={onChangeUsername}/>\r\n            </div>\r\n            <div className={styles.inputWrapper}>\r\n                Password:\r\n                <SuperInputText\r\n                    type={\"password\"}\r\n                    error={errorFromServer || error}\r\n                    value={password}\r\n                    onChangeText={onChangePassword}\r\n                />\r\n            </div>\r\n            <div className={styles.inputWrapper}>\r\n                Confirm Password:\r\n                <SuperInputText\r\n                    type={\"password\"}\r\n                    error={errorFromServer || error}\r\n                    value={passwordConfirm}\r\n                    onChangeText={onChangePasswordConfirm}\r\n                />\r\n            </div>\r\n            <div className={styles.buttonWrapper}>\r\n                <SuperButton onClick={onClickSubmitData}>Sign Up</SuperButton>\r\n            </div>\r\n            <div>\r\n                <Link to={\"/authorization\"}>Login</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Error_404.module.css\"\r\n\r\nexport const Error_404:React.FC= (props)=>{\r\n    return (\r\n        <>\r\n            <div className={ style.mainbox }>\r\n                <div className={ style.err }>4</div>\r\n                <div className={ style.far} >0</div>\r\n                <div className={ style.err2 }>4</div>\r\n                <div className={ style.msg }>Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in\r\n                    the first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {InferActionsType} from \"./store\";\r\n\r\n//actions\r\nexport const actionsProfile = {\r\n    setProfile:(model:ProfileResponseType)=>{\r\n        return {\r\n            type:'friday/profile/setProfile',\r\n            payload:{model}\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//state\r\n\r\nconst initialStateProfile = {\r\n    profileEntity: {\r\n        _id: null,\r\n        email: null,\r\n        name: null,\r\n        avatar: null,\r\n        publicCardPacksCount: null, // количество колод\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: null,\r\n        verified: null,// подтвердил ли почту\r\n        rememberMe: null,\r\n        error: null,\r\n    } as ProfileResponseType\r\n}\r\n//reducer\r\nconst profileReducer = (state = initialStateProfile, action: ProfileActionsTypes): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case \"friday/profile/setProfile\":\r\n            return {...state,...action.payload.model}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer;\r\n//types\r\nexport type ProfileActionsTypes = InferActionsType<typeof actionsProfile>;\r\nexport type InitialStateProfileType = typeof initialStateProfile;\r\nexport type ProfileResponseType = {\r\n    _id: string | null\r\n    email: string | null\r\n    name: string | null\r\n    avatar?: string | null\r\n    publicCardPacksCount: number | null // количество колод\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null;// подтвердил ли почту\r\n    rememberMe: boolean | null\r\n    error?: string | null\r\n}\r\n","import {AppThunk, InferActionsType} from \"./store\";\r\nimport {authApi} from \"../dal/authAPI\";\r\nimport {actionsProfile} from \"./profile-reducer\";\r\n\r\n//state\r\nconst initialProfileState = {\r\n    isAuth:false,\r\n    error:undefined as string|undefined\r\n\r\n}\r\n\r\n\r\n//actions\r\nexport const actionsAuthorization = {\r\n    setAuth: (isAuth:boolean)=>{\r\n        return {\r\n            type: 'friday/auth/setAuthAC',\r\n            payload:{isAuth}\r\n        } as const\r\n    },\r\n    setError:(error:string|undefined)=>{\r\n        return {\r\n            type: 'friday/auth/setErrorAC',\r\n            payload:{error}\r\n        } as const\r\n    }\r\n}\r\n//thunk\r\nexport const loginTC = (email: string, password: string, rememberMe = false):AppThunk=>async dispatch=>{\r\n   try {\r\n       const response = await authApi.login(email,password,rememberMe)\r\n       dispatch(actionsProfile.setProfile(response.data))\r\n       dispatch(actionsAuthorization.setAuth(true))\r\n   } catch (e) {\r\n       const error = e.response\r\n           ? e.response.data.error\r\n           : (e.message + ', more details in the console');\r\n       dispatch(actionsAuthorization.setError(error))\r\n       }\r\n}\r\n\r\n//reducer\r\nconst authReducer = (state = initialProfileState, action: AuthActionsTypes): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case \"friday/auth/setAuthAC\": //сетаем исАус\r\n        case \"friday/auth/setErrorAC\": //сетаем еррор\r\n            return {...state,...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default authReducer;\r\n//types\r\nexport type AuthActionsTypes = InferActionsType<typeof actionsAuthorization>;\r\nexport type InitialStateProfileType = typeof initialProfileState;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./Authorization.module.css\";\r\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\ntype AuthPropsTypes = {\r\n    onBlurCallback: (value: string) => void\r\n    changeEmailInput: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePasswordInput: (e: ChangeEvent<HTMLInputElement>) => void\r\n    login: () => void\r\n    password: string\r\n    email: string\r\n    error: string | undefined\r\n}\r\nexport const Authorization: React.FC<AuthPropsTypes> = React.memo((props) => {\r\n    const {\r\n        onBlurCallback, changeEmailInput, changePasswordInput, login, password, email, error\r\n    } = props //деструктуризация\r\n    return (\r\n        <div className={ style.authContainer }>\r\n            <div className={ style.titleFrame }><h1>it-incubator</h1>\r\n                <h2>sign in</h2></div>\r\n            <div className={ style.inputsFrame }>\r\n                <SuperInputText onBlur={ () => onBlurCallback ( email ) } error={ error } value={ email }\r\n                                onChange={ changeEmailInput } placeholder={ 'login' }/>\r\n                <SuperInputText onBlur={ () => onBlurCallback ( password ) } error={ error } value={ password }\r\n                                onChange={ changePasswordInput } placeholder={ 'password' }/>\r\n                <SuperButton disabled={ !!error } red={ !!error } onClick={ login }>login</SuperButton>\r\n            </div>\r\n            <div className={ style.forgotPasFrame }>\r\n                <NavLink to={ PATH.PASSWORD_RECOVERY } className={ style.forgotPasButton }>forgot password?</NavLink>\r\n            </div>\r\n\r\n            <div className={ style.signUpFrame }>\r\n                <span>Don’t have an account?</span>\r\n                <SuperButton><NavLink to={ PATH.REGISTRATION }>sign up</NavLink></SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actionsAuthorization, loginTC} from \"../../../bll/authorization-reducer\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {Authorization} from \"./Authorization\";\r\n\r\nexport const AuthorizationContainer: React.FC = React.memo((props) => {\r\n    const [email, setEmail] = useState ( '' )\r\n    const [password, setPassword] = useState ( '' )\r\n    const dispatch = useDispatch ()\r\n    const isAuth = useSelector<AppStateType, boolean> ( state => state.auth.isAuth )\r\n    const error = useSelector<AppStateType, string | undefined> ( state => state.auth.error )\r\n\r\n    const login = () => {\r\n        dispatch ( loginTC ( email, password ) )\r\n    }\r\n    const changePasswordInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch ( actionsAuthorization.setError ( undefined ) )\r\n        setPassword ( e.currentTarget.value )\r\n    }\r\n    const changeEmailInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail ( e.currentTarget.value )\r\n        dispatch ( actionsAuthorization.setError ( undefined ) )\r\n    }\r\n    const onBlurCallback = (value: string) => {\r\n        if (error && value.trim ().length > 0) {\r\n            dispatch ( actionsAuthorization.setError ( undefined ) )\r\n        }\r\n    }\r\n\r\n    if (isAuth) return <Redirect to={ PATH.PROFILE }/>\r\n\r\n    return <Authorization password={ password } error={ error } login={ login }\r\n                          changePasswordInput={ changePasswordInput } changeEmailInput={ changeEmailInput }\r\n                          email={ email } onBlurCallback={ onBlurCallback }/>\r\n})\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        console.log(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div className={s.checkBoxFrame}>\r\n\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                id={\"checkbox\"}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <label htmlFor=\"checkbox\">\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            </label>\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperButton from \"../../main/ui/common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../main/ui/common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../main/ui/common/components/SuperCheckbox/SuperCheckbox\";\r\nimport style from './TestComponents.module.css'\r\n\r\nexport const TestComponents: React.FC = (props) => {\r\n    return (\r\n        <div className={style.testFrame}>\r\n            <SuperButton disabled>disabled</SuperButton>\r\n            <SuperButton red>error</SuperButton>\r\n            <SuperButton>something</SuperButton>\r\n            <SuperInputText value={'test'}/>\r\n            <SuperInputText value={'error'} error={'error'}/>\r\n            <SuperCheckbox checked/>\r\n            <SuperCheckbox checked={true}/>\r\n\r\n\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {Profile} from \"../profile/Profile\";\r\nimport {NewPassword} from \"../new-password/NewPassword\";\r\nimport {PasswordRecovery} from \"../password-recovery/PasswordRecovery\";\r\nimport {Registration} from \"../registration/Registration\";\r\nimport {Error_404} from \"../error-pages/404-error/Error_404\";\r\nimport {AuthorizationContainer} from \"../authorization/AuthorizationContainer\";\r\nimport {TestComponents} from \"../../../../features/test-components/TestComponents\";\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: '/',//PROFILE\r\n    NEW_PASSWORD: '/new_password',\r\n    PASSWORD_RECOVERY: '/password_recovery',\r\n    REGISTRATION: '/registration',\r\n    AUTHORIZATION: '/authorization',\r\n    ERROR_404: '/error/404',\r\n    TEST: '/test',\r\n}\r\nexport const Routes:React.FC=()=>{\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.PROFILE} render={()=><Profile/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={()=><NewPassword/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={()=><PasswordRecovery/>}/>\r\n                <Route path={PATH.REGISTRATION} render={()=><Registration/>}/>\r\n                <Route path={PATH.AUTHORIZATION} render={()=><AuthorizationContainer/>}/>\r\n                <Route path={PATH.TEST} render={()=><TestComponents/>}/>\r\n                <Route render={()=><Error_404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header: React.FC = (props) => {\r\n    return (\r\n        <div className={style.headerFrame}>\r\n            <NavLink to={PATH.TEST}>test</NavLink>\r\n            <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            <NavLink to={PATH.AUTHORIZATION}>auth</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>register</NavLink>\r\n            <NavLink to={PATH.ERROR_404}>error</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>pass new</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}>pass recovery</NavLink>\r\n\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./components/header/Header\";\r\nimport {Routes} from \"./components/routes/Routes\";\r\n\r\nfunction App() {\r\n    return (<HashRouter>\r\n            <div className=\"App\">\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport profileReducer, { ProfileActionsTypes } from \"./profile-reducer\";\r\nimport authReducer, { AuthActionsTypes } from \"./authorization-reducer\";\r\nimport recoveryPasswordReducer, {RecoveryPasswordActionsTypes, recoveryPasswordTC} from \"./recovery-password-reducer\";\r\nimport { NewPasswordActionsTypes } from \"./new-password-reducer\";\r\nimport { registrationReducer } from \"./registration-reducer\";\r\n\r\nexport type ActionsTypes =\r\n  | ProfileActionsTypes\r\n  | AuthActionsTypes\r\n  | RecoveryPasswordActionsTypes\r\n  | NewPasswordActionsTypes;\r\n\r\nconst rootReducer = combineReducers({\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  auth:authReducer,\r\n  recoveryPassword:recoveryPasswordReducer\r\n});\r\n\r\n//common state type\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\n//thunk generic type\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  ActionsTypes\r\n>;\r\n\r\n//properties generic type for thunk\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\n\r\n//generic actions type\r\nexport type InferActionsType<\r\n  T extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesType<T>>;\r\n\r\n//enhancers with dev-tools\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && //@ts-ignore\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? //@ts-ignore\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunkMiddleware));\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./main/bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={ store }><App/></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}