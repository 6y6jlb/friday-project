{"version":3,"sources":["main/ui/components/authorization/Authorization.module.css","main/ui/components/registration/Registration.module.css","main/ui/components/error-pages/404-error/Error_404.module.css","main/ui/common/components/SuperInputText/SuperInputText.module.css","main/ui/common/components/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/components/SuperButton/SuperButton.module.css","features/test-components/TestComponents.module.css","main/ui/components/header/Header.module.css","main/ui/components/profile/Profile.tsx","main/ui/components/new-password/NewPassword.tsx","main/ui/components/password-recovery/PasswordRecovery.tsx","main/bll/registration-reducer.ts","main/ui/common/components/SuperButton/SuperButton.tsx","main/ui/common/components/SuperInputText/SuperInputText.tsx","main/ui/components/registration/Registration.tsx","main/ui/components/error-pages/404-error/Error_404.tsx","main/dal/instatnce.ts","main/dal/authAPI.ts","main/bll/profile-reducer.ts","main/bll/authorization-reducer.ts","main/ui/components/authorization/Authorization.tsx","main/ui/common/components/SuperCheckbox/SuperCheckbox.tsx","features/test-components/TestComponents.tsx","main/ui/components/routes/Routes.tsx","main/ui/components/header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","Profile","props","NewPassword","PasswordRecovery","REGISTERED","registerUserAC","registered","type","SuperButton","red","className","children","restProps","finalClassName","s","floatingButtonRed","floatingButtonDefault","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","inputFrame","e","currentTarget","value","key","Registration","useState","userName","setuserName","password","setPassword","passwordConfirm","setPasswordConfirm","setError","useSelector","state","registration","dispatch","useDispatch","useEffect","to","styles","registrationWrapper","inputWrapper","buttonWrapper","onClick","Error_404","style","mainbox","err","far","err2","msg","href","instance","axios","create","baseURL","withCredentials","authApi","email","rememberMe","model","post","actionsProfile","payload","initialStateProfile","profileEntity","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","profileReducer","action","initialProfileState","isAuth","undefined","actionsAuthorization","authReducer","Authorization","setEmail","auth","PATH","PROFILE","authContainer","titleFrame","inputsFrame","placeholder","disabled","a","response","data","message","loginTC","forgotPasFrame","PASSWORD_RECOVERY","forgotPasButton","signUpFrame","REGISTRATION","SuperCheckbox","onChangeChecked","checkbox","checkBoxFrame","checked","console","log","id","htmlFor","TestComponents","testFrame","NEW_PASSWORD","AUTHORIZATION","ERROR_404","TEST","Routes","exact","path","render","Header","headerFrame","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profile","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c2bc880.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"Authorization_authContainer__vFy80\",\"inputsFrame\":\"Authorization_inputsFrame__2P9DZ\",\"forgotPasFrame\":\"Authorization_forgotPasFrame__BrWXq\",\"signUpFrame\":\"Authorization_signUpFrame__1vbLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationWrapper\":\"Registration_registrationWrapper__2Mhbi\",\"buttonWrapper\":\"Registration_buttonWrapper__1sx-0\",\"inputWrapper\":\"Registration_inputWrapper__s8cfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Error_404_mainbox__3SNMS\",\"err\":\"Error_404_err__1XV1b\",\"far\":\"Error_404_far__QVFru\",\"err2\":\"Error_404_err2__3ILFH\",\"msg\":\"Error_404_msg__2l7Uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__TKMZF\",\"errorInput\":\"SuperInputText_errorInput__QFNeK\",\"error\":\"SuperInputText_error__2O1aP\",\"inputFrame\":\"SuperInputText_inputFrame__17wrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBoxFrame\":\"SuperCheckbox_checkBoxFrame__1aOE2\",\"checkbox\":\"SuperCheckbox_checkbox__2p9_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingButtonDefault\":\"SuperButton_floatingButtonDefault__W4xXD\",\"floatingButtonRed\":\"SuperButton_floatingButtonRed__2fS2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testFrame\":\"TestComponents_testFrame__2Dc8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerFrame\":\"Header_headerFrame__1AmnK\"};","import React from \"react\";\r\n\r\nexport const Profile:React.FC= (props)=>{\r\n\r\n    return <h1>Test 10 feruz</h1>\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport const NewPassword:React.FC= (props)=>{\r\n    return <h1>NewPassword</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PasswordRecovery:React.FC= (props)=>{\r\n    return <h1>PasswordRecovery</h1>\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { InferActionsType } from \"./store\";\r\n\r\nconst REGISTERED = \"REGISTERED\";\r\n\r\n//actions\r\nexport const actionsProfile = {\r\n  registered: false,\r\n};\r\n//reducer\r\nexport const registrationReducer = (\r\n  state = {},\r\n  action: RegistrationActionsTypes\r\n): InitialStateProfileType => {\r\n  switch (action.type) {\r\n    case REGISTERED: {\r\n      return { ...state, registered: action.registered };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//actions\r\nexport const registerUserAC = (registered: boolean) => ({\r\n  type: REGISTERED,\r\n  registered,\r\n});\r\n\r\n//thunks\r\nexport const registerUserTC = (data: RegisterData) => (dispatch: Dispatch) => {\r\n  //   AUTH.register().register(data).then(() => {\r\n  //     dispatch(registerUserAC(true));\r\n  //   });\r\n};\r\n\r\n//types\r\n// export type RegistrationActionsTypes = InferActionsType<typeof actionsProfile>;\r\nexport type RegisterData = {\r\n  email: string;\r\n  password: string;\r\n};\r\nexport type RegistrationActionsTypes = any;\r\nexport type InitialStateProfileType = any;\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  children,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${\r\n    red ? s.floatingButtonRed : s.floatingButtonDefault\r\n  } ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === \"Enter\" && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${spanClassName ? spanClassName : s.error}`;\r\n  const finalInputClassName = error\r\n    ? `${s.errorInput} ${className}`\r\n    : `${s.superInput} ${className}`;\r\n  //const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n    <div className={s.inputFrame}>\r\n      <input\r\n        type={\"text\"}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      <div>{error && <span className={finalSpanClassName}>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { RootStateOrAny, useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { registerUserAC } from \"../../../bll/registration-reducer\";\r\nimport { AppStateType } from \"../../../bll/store\";\r\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\r\nimport styles from \"./Registration.module.css\";\r\n\r\nexport const Registration: React.FC = (props) => {\r\n  const [userName, setuserName] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState<string>(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const registered = useSelector<AppStateType, boolean>(\r\n    (state) => state.registration.registered\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e: string) => {\r\n    setuserName(e);\r\n  };\r\n  const onChangePassword = (e: string) => {\r\n    setPassword(e);\r\n  };\r\n  const onChangePasswordConfirm = (e: string) => {\r\n    setPasswordConfirm(e);\r\n  };\r\n  const onClickSubmitData = () => {\r\n    if (password !== passwordConfirm) {\r\n      setError(\"Passwords should be same\");\r\n    } else if (!password || !passwordConfirm) {\r\n      setError(\"Passwords should not be empty\");\r\n    } else {\r\n      dispatch(registerUserAC(true));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(registerUserAC(false));\r\n    };\r\n  }, []);\r\n  if (registered) {\r\n    return <Redirect to={\"/authorization\"} />;\r\n  }\r\n  return (\r\n    <div className={styles.registrationWrapper}>\r\n      <div className={styles.inputWrapper}>\r\n        Username:\r\n        <SuperInputText value={userName} onChangeText={onChangeUsername} />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        Password:\r\n        <SuperInputText\r\n          error={error}\r\n          value={password}\r\n          onChangeText={onChangePassword}\r\n        />\r\n      </div>\r\n      <div className={styles.inputWrapper}>\r\n        Confirm Password:\r\n        <SuperInputText\r\n          error={error}\r\n          value={passwordConfirm}\r\n          onChangeText={onChangePasswordConfirm}\r\n        />\r\n      </div>\r\n      <div className={styles.buttonWrapper}>\r\n        <SuperButton onClick={onClickSubmitData}>Sign Up</SuperButton>\r\n      </div>\r\n      <div>\r\n        <Link to={\"/authorization\"}>Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport style from \"./Error_404.module.css\"\r\n\r\nexport const Error_404:React.FC= (props)=>{\r\n    return (\r\n        <>\r\n            <div className={ style.mainbox }>\r\n                <div className={ style.err }>4</div>\r\n                <div className={ style.far} >0</div>\r\n                <div className={ style.err2 }>4</div>\r\n                <div className={ style.msg }>Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in\r\n                    the first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const baseURL = 'http://localhost:7542/2.0/'; //local back\r\n//export const baseURL = 'https://neko-back.herokuapp.com/2.0'; //remote back\r\n\r\nexport const instance = axios.create ( {\r\n    baseURL,\r\n    withCredentials: true\r\n} );","import {instance} from \"./instatnce\";\r\nimport {ProfileResponseType} from \"../bll/profile-reducer\";\r\n\r\nexport const authApi = {\r\n    pingGet: () => {\r\n        return instance.get ( 'ping/' )\r\n    },\r\n    pingPost: () => {\r\n        return instance.post ( 'ping/', {frontTime: Date.now ()} )\r\n    },\r\n    me: () => {\r\n        return instance.post ( 'auth/me', {} )\r\n    },\r\n    login: (email: string, password: string, rememberMe:boolean) => {\r\n        const model = {\r\n            email, password, rememberMe\r\n        }\r\n        return instance.post<ProfileResponseType>( 'auth/login/', model )\r\n    },\r\n    logOut: () => {\r\n        return instance.delete ( 'auth/me/', {} )\r\n    }\r\n}","import {InferActionsType} from \"./store\";\r\n\r\n//actions\r\nexport const actionsProfile = {\r\n    setProfile:(model:ProfileResponseType)=>{\r\n        return {\r\n            type:'friday/profile/setProfile',\r\n            payload:{model}\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//state\r\n\r\nconst initialStateProfile = {\r\n    profileEntity: {\r\n        _id: null,\r\n        email: null,\r\n        name: null,\r\n        avatar: null,\r\n        publicCardPacksCount: null, // количество колод\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: null,\r\n        verified: null,// подтвердил ли почту\r\n        rememberMe: null,\r\n        error: null,\r\n    } as ProfileResponseType\r\n}\r\n//reducer\r\nconst profileReducer = (state = initialStateProfile, action: ProfileActionsTypes): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case \"friday/profile/setProfile\":\r\n            return {...state,...action.payload.model}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer;\r\n//types\r\nexport type ProfileActionsTypes = InferActionsType<typeof actionsProfile>;\r\nexport type InitialStateProfileType = typeof initialStateProfile;\r\nexport type ProfileResponseType = {\r\n    _id: string | null\r\n    email: string | null\r\n    name: string | null\r\n    avatar?: string | null\r\n    publicCardPacksCount: number | null // количество колод\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null;// подтвердил ли почту\r\n    rememberMe: boolean | null\r\n    error?: string | null\r\n}\r\n","import {AppThunk, InferActionsType} from \"./store\";\r\nimport {authApi} from \"../dal/authAPI\";\r\nimport {actionsProfile} from \"./profile-reducer\";\r\n\r\n//state\r\nconst initialProfileState = {\r\n    isAuth:false,\r\n    error:undefined as string|undefined\r\n\r\n}\r\n\r\n\r\n//actions\r\nexport const actionsAuthorization = {\r\n    setAuth: (isAuth:boolean)=>{\r\n        return {\r\n            type: 'friday/auth/setAuthAC',\r\n            payload:{isAuth}\r\n        } as const\r\n    },\r\n    setError:(error:string|undefined)=>{\r\n        return {\r\n            type: 'friday/auth/setErrorAC',\r\n            payload:{error}\r\n        } as const\r\n    }\r\n}\r\n//thunk\r\nexport const loginTC = (email: string, password: string, rememberMe = false):AppThunk=>async dispatch=>{\r\n   try {\r\n       const response = await authApi.login(email,password,rememberMe)\r\n       dispatch(actionsProfile.setProfile(response.data))\r\n       dispatch(actionsAuthorization.setAuth(true))\r\n   } catch (e) {\r\n       const error = e.response\r\n           ? e.response.data.error\r\n           : (e.message + ', more details in the console');\r\n       dispatch(actionsAuthorization.setError(error))\r\n       }\r\n}\r\n\r\n//reducer\r\nconst authReducer = (state = initialProfileState, action: AuthActionsTypes): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        case \"friday/auth/setAuthAC\": //сетаем исАус\r\n        case \"friday/auth/setErrorAC\": //сетаем еррор\r\n            return {...state,...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default authReducer;\r\n//types\r\nexport type AuthActionsTypes = InferActionsType<typeof actionsAuthorization>;\r\nexport type InitialStateProfileType = typeof initialProfileState;\r\n","import React, {ChangeEvent, ChangeEventHandler, useState} from \"react\";\r\nimport style from './Authorization.module.css'\r\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH, Routes} from \"../routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actionsAuthorization, loginTC} from \"../../../bll/authorization-reducer\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\n\r\nexport const Authorization: React.FC = (props) => {\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStateType,boolean>(state=>state.auth.isAuth)\r\n    const error = useSelector<AppStateType,string|undefined>(state=>state.auth.error)\r\n\r\n    const login=()=>{\r\n        //dispatch(loginTC('nya-admin@nya.nya','1qazxcvBG')) //ignat login\r\n        dispatch(loginTC(email,password))\r\n    }\r\n    const changePasswordInput=(e:ChangeEvent<HTMLInputElement>)=> {\r\n        dispatch(actionsAuthorization.setError(undefined))\r\n       setPassword(e.currentTarget.value)\r\n    }\r\n    const changeEmailInput=(e:ChangeEvent<HTMLInputElement>)=> {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(actionsAuthorization.setError(undefined))\r\n    }\r\n    const onBlurCallback=()=>{\r\n        if (error) {\r\n            dispatch ( actionsAuthorization.setError ( undefined ) )\r\n        }\r\n    }\r\n\r\n    if (isAuth) return <Redirect to={PATH.PROFILE}/>\r\n\r\n    return (\r\n        <div  className={style.authContainer}>\r\n            <div className={ style.titleFrame }><h1>it-incubator</h1>\r\n                <h2>sign in</h2></div>\r\n            <div className={ style.inputsFrame }>\r\n                <SuperInputText error={error} value={email} onChange={changeEmailInput} placeholder={ 'login' }/>\r\n                <SuperInputText error={error} value={password} onChange={changePasswordInput} placeholder={ 'password' }/>\r\n                <SuperButton disabled={!!error} red={!!error} onClick={login}>login</SuperButton>\r\n            </div>\r\n            <div className={ style.forgotPasFrame }>\r\n                <NavLink to={PATH.PASSWORD_RECOVERY} className={ style.forgotPasButton }>forgot password?</NavLink>\r\n            </div>\r\n\r\n            <div className={ style.signUpFrame }>\r\n                <span>Don’t have an account?</span>\r\n                <SuperButton><NavLink to={PATH.REGISTRATION}>sign up</NavLink></SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        console.log(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div className={s.checkBoxFrame}>\r\n\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                id={\"checkbox\"}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <label htmlFor=\"checkbox\">\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            </label>\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperButton from \"../../main/ui/common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../main/ui/common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../main/ui/common/components/SuperCheckbox/SuperCheckbox\";\r\nimport style from './TestComponents.module.css'\r\n\r\nexport const TestComponents: React.FC = (props) => {\r\n    return (\r\n        <div className={style.testFrame}>\r\n            <SuperButton disabled>disabled</SuperButton>\r\n            <SuperButton red>error</SuperButton>\r\n            <SuperButton>something</SuperButton>\r\n            <SuperInputText value={'test'}/>\r\n            <SuperInputText value={'error'} error={'error'}/>\r\n            <SuperCheckbox checked/>\r\n            <SuperCheckbox checked={true}/>\r\n\r\n\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {Profile} from \"../profile/Profile\";\r\nimport {NewPassword} from \"../new-password/NewPassword\";\r\nimport {PasswordRecovery} from \"../password-recovery/PasswordRecovery\";\r\nimport {Registration} from \"../registration/Registration\";\r\nimport {Error_404} from \"../error-pages/404-error/Error_404\";\r\nimport {Authorization} from \"../authorization/Authorization\";\r\nimport {TestComponents} from \"../../../../features/test-components/TestComponents\";\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: '/',//PROFILE\r\n    NEW_PASSWORD: '/new_password',\r\n    PASSWORD_RECOVERY: '/password_recovery',\r\n    REGISTRATION: '/registration',\r\n    AUTHORIZATION: '/authorization',\r\n    ERROR_404: '/error/404',\r\n    TEST: '/test',\r\n}\r\nexport const Routes:React.FC=()=>{\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.PROFILE} render={()=><Profile/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={()=><NewPassword/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={()=><PasswordRecovery/>}/>\r\n                <Route path={PATH.REGISTRATION} render={()=><Registration/>}/>\r\n                <Route path={PATH.AUTHORIZATION} render={()=><Authorization/>}/>\r\n                <Route path={PATH.TEST} render={()=><TestComponents/>}/>\r\n                <Route render={()=><Error_404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header: React.FC = (props) => {\r\n    return (\r\n        <div className={style.headerFrame}>\r\n            <NavLink to={PATH.TEST}>test</NavLink>\r\n            <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            <NavLink to={PATH.AUTHORIZATION}>auth</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>register</NavLink>\r\n            <NavLink to={PATH.ERROR_404}>error</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>pass new</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}>pass recovery</NavLink>\r\n\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./components/header/Header\";\r\nimport {Routes} from \"./components/routes/Routes\";\r\n\r\nfunction App() {\r\n    return (<HashRouter>\r\n            <div className=\"App\">\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport profileReducer, { ProfileActionsTypes } from \"./profile-reducer\";\r\nimport authReducer, { AuthActionsTypes } from \"./authorization-reducer\";\r\nimport { RecoveryPasswordActionsTypes } from \"./recovery-password-reducer\";\r\nimport { NewPasswordActionsTypes } from \"./new-password-reducer\";\r\nimport { registrationReducer } from \"./registration-reducer\";\r\n\r\nexport type ActionsTypes =\r\n  | ProfileActionsTypes\r\n  | AuthActionsTypes\r\n  | RecoveryPasswordActionsTypes\r\n  | NewPasswordActionsTypes;\r\n\r\nconst rootReducer = combineReducers({\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  auth:authReducer,\r\n});\r\n\r\n//common state type\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\n//thunk generic type\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  ActionsTypes\r\n>;\r\n\r\n//properties generic type for thunk\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\n\r\n//generic actions type\r\nexport type InferActionsType<\r\n  T extends { [key: string]: (...args: any[]) => any }\r\n> = ReturnType<PropertiesType<T>>;\r\n\r\n//enhancers with dev-tools\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && //@ts-ignore\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? //@ts-ignore\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunkMiddleware));\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./main/bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={ store }><App/></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}