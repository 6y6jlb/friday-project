{"version":3,"sources":["main/ui/common/components/SuperInputText/SuperInputText.module.css","main/ui/common/components/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/components/SuperButton/SuperButton.module.css","features/test-components/TestComponents.module.css","main/ui/components/header/Header.module.css","main/ui/components/profile/Profile.tsx","main/ui/components/new-password/NewPassword.tsx","main/ui/components/password-recovery/PasswordRecovery.tsx","main/ui/components/registration/Registration.tsx","main/ui/components/error-pages/404-error/Error_404.tsx","main/ui/components/authorization/Authorization.tsx","main/ui/common/components/SuperButton/SuperButton.tsx","main/ui/common/components/SuperInputText/SuperInputText.tsx","main/ui/common/components/SuperCheckbox/SuperCheckbox.tsx","features/test-components/TestComponents.tsx","main/ui/components/routes/Routes.tsx","main/ui/components/header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/profile-reducer.ts","main/bll/store.ts","index.tsx"],"names":["module","exports","Profile","props","NewPassword","PasswordRecovery","Registration","Error_404","Authorization","SuperButton","red","className","restProps","finalClassName","s","floatingButtonRed","floatingButtonDefault","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","inputFrame","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checkBoxFrame","checked","console","log","id","htmlFor","TestComponents","style","testFrame","disabled","PATH","Routes","path","render","Header","headerFrame","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","state","action","rootReducer","combineReducers","profile","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.371fd9de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__TKMZF\",\"errorInput\":\"SuperInputText_errorInput__QFNeK\",\"error\":\"SuperInputText_error__2O1aP\",\"inputFrame\":\"SuperInputText_inputFrame__17wrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBoxFrame\":\"SuperCheckbox_checkBoxFrame__1aOE2\",\"checkbox\":\"SuperCheckbox_checkbox__2p9_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingButtonDefault\":\"SuperButton_floatingButtonDefault__W4xXD\",\"floatingButtonRed\":\"SuperButton_floatingButtonRed__2fS2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testFrame\":\"TestComponents_testFrame__2Dc8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerFrame\":\"Header_headerFrame__1AmnK\"};","import React from \"react\";\r\n\r\nexport const Profile:React.FC= (props)=>{\r\n    return <h1>Profile</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const NewPassword:React.FC= (props)=>{\r\n    return <h1>NewPassword</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const PasswordRecovery:React.FC= (props)=>{\r\n    return <h1>PasswordRecovery</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Registration:React.FC= (props)=>{\r\n    return <h1>registration</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Error_404:React.FC= (props)=>{\r\n    return <h1>Error_404</h1>\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Authorization:React.FC= (props)=>{\r\n    return <h1>authorization</h1>\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.floatingButtonRed :s.floatingButtonDefault} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${spanClassName ? spanClassName : s.error}`\r\n    const finalInputClassName = error?`${s.errorInput} ${className}`:`${s.superInput} ${className}`\r\n    //const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.inputFrame}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        console.log(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div className={s.checkBoxFrame}>\r\n\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                id={\"checkbox\"}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <label htmlFor=\"checkbox\">\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            </label>\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperButton from \"../../main/ui/common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../main/ui/common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../main/ui/common/components/SuperCheckbox/SuperCheckbox\";\r\nimport style from './TestComponents.module.css'\r\n\r\nexport const TestComponents: React.FC = (props) => {\r\n    return (\r\n        <div className={style.testFrame}>\r\n            <SuperButton disabled>disabled</SuperButton>\r\n            <SuperButton red>error</SuperButton>\r\n            <SuperButton>something</SuperButton>\r\n            <SuperInputText value={'test'}/>\r\n            <SuperInputText value={'error'} error={'error'}/>\r\n            <SuperCheckbox checked/>\r\n            <SuperCheckbox checked={false}/>\r\n\r\n        </div>)\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {Profile} from \"../profile/Profile\";\r\nimport {NewPassword} from \"../new-password/NewPassword\";\r\nimport {PasswordRecovery} from \"../password-recovery/PasswordRecovery\";\r\nimport {Registration} from \"../registration/Registration\";\r\nimport {Error_404} from \"../error-pages/404-error/Error_404\";\r\nimport {Authorization} from \"../authorization/Authorization\";\r\nimport {TestComponents} from \"../../../../features/test-components/TestComponents\";\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    NEW_PASSWORD: '/new_password',\r\n    PASSWORD_RECOVERY: '/password_recovery',\r\n    REGISTRATION: '/registration',\r\n    AUTHORIZATION: '/authorization',\r\n    ERROR_404: '/error/404',\r\n    TEST: '/test',\r\n}\r\nexport const Routes:React.FC=()=>{\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={PATH.PROFILE} render={()=><Profile/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={()=><NewPassword/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={()=><PasswordRecovery/>}/>\r\n                <Route path={PATH.REGISTRATION} render={()=><Registration/>}/>\r\n                <Route path={PATH.ERROR_404} render={()=><Error_404/>}/>\r\n                <Route path={PATH.AUTHORIZATION} render={()=><Authorization/>}/>\r\n                <Route path={PATH.TEST} render={()=><TestComponents/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport style from './Header.module.css'\r\n\r\nexport const Header: React.FC = (props) => {\r\n    return (\r\n        <div className={style.headerFrame}>\r\n            <NavLink to={PATH.TEST}>test</NavLink>\r\n            <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            <NavLink to={PATH.AUTHORIZATION}>auth</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>register</NavLink>\r\n            <NavLink to={PATH.ERROR_404}>error</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>pass new</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}>pass recovery</NavLink>\r\n\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./components/header/Header\";\r\nimport {Routes} from \"./components/routes/Routes\";\r\n\r\nfunction App() {\r\n    return (<HashRouter>\r\n            <div className=\"App\">\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {InferActionsType} from \"./store\";\r\n\r\n//actions\r\nexport const actionsProfile = {}\r\n//reducer\r\nconst profileReducer = (state = {}, action: ProfileActionsTypes): InitialStateProfileType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer;\r\n//types\r\nexport type ProfileActionsTypes = InferActionsType<typeof actionsProfile>;\r\nexport type InitialStateProfileType = any;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport profileReducer, {ProfileActionsTypes} from \"./profile-reducer\";\r\nimport {AuthActionsTypes} from \"./authorization-reducer\";\r\nimport {RecoveryPasswordActionsTypes} from \"./recovery-password-reducer\";\r\nimport {NewPasswordActionsTypes} from \"./new-password-reducer\";\r\n\r\n\r\nexport type ActionsTypes =\r\n    | ProfileActionsTypes\r\n    | AuthActionsTypes\r\n    | RecoveryPasswordActionsTypes\r\n    | NewPasswordActionsTypes\r\n\r\n\r\nconst rootReducer = combineReducers ( {\r\n    profile: profileReducer,\r\n} );\r\n\r\n//common state type\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n//thunk generic type\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionsTypes>\r\n\r\n\r\n//properties generic type for thunk\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\n\r\n//generic actions type\r\nexport type InferActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n\r\n\r\n//enhancers with dev-tools\r\nconst composeEnhancers = typeof window === 'object' && //@ts-ignore\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ( {} ) : compose;\r\n\r\nconst enhancer = composeEnhancers (\r\n    applyMiddleware ( thunkMiddleware ),\r\n);\r\nexport const store = createStore ( rootReducer, enhancer );\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./main/bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={ store }><App/></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}